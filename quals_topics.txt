positive samples:
0    -------    fuzzy text search python wondering python library conduct fuzzy text search example three keywords letter stamp mail would like function check three words within paragraph certain distances one page addition words maintain order fine words appear three words tried solve problem another library whoosh looks powerful find proper function     ------   simple fuzzy string matching algorithm python trying find sort good fuzzy string matching algorithm direct matching work good unless strings similar match fails method work well strings works character level looking something along lines word level matching e g string quick brown fox string b quick brown fox jumped lazy dog match words string string b oversimplified example would anyone know good fuzzy string matching algorithm works word level take look python library open sourced yesterday obviously kinds problems context dependent might help like use find longest match pick minimum matching threshold example 
0    -------    vending machine python add cost beginner python vending machine program checked codes get answer want little different mine program take user step step tried different approaches get total add also compare total amount entered see user products get work help much appreciated also anyone suggestions improve code please let know code     ------   vending machine program calculate amount inserted etc want write program simulate vending machine calculate change returned based amount paid given cost user first prompted add money cost met exceeded payment assume change given coins coins come following denominations c c c c program run program follow instructions look like instead get also another expected output however get rest work correct thanks help guys especially jonrsharpe solution code form specific error stems fact deal correctly case exactly reach total overshoot give change however code long complex difficult figure exactly stage general coding suggestions eval bad idea better use int input also make fuss user enter integer outer loop really loop rather guessing maximum number iterations run even made change lot repeated code hard coded values whenever write similar things repeatedly consider splitting function arguments kind loop also reading description specifically given cost user first prompted add money cost met exceeded payment think supposed allowing user input coins rather guessing enter one possible implementation note division responsibility two functions make easier test one separately appropriate use loops minimise repetition also made amounts paid make change depend coins change one place add new coins example usage 
0    -------    combining rows pandas dataframe iterating achieve expected result following dataframe expected result rows rows merging empty strings col col also concatenating values col one cell anyone help user defined function     ------   combining rows pandas dataframe comparing multiple columns achieve expected result following dataframe expected result rows rows merging empty strings col col also concatenating distinct values col col one cell anyone help user defined function previous let try one output 
0    -------    capturing emoticons using regular expression python would like regex pattern match smileys also capture repeated smileys like filter invalid syntax like matches maybe missing something obvious like help seemingly simple task     ------   find count emoticons string using python topic addressed text based emoticons however would like something slightly different matching simple emoticons sorting tweets contain emoticons icons following unicode information contains emoticons using string english words also contains emoticons would like able compare number emoticons number words direction heading seem best option looking help see script planning work command line py psuedo script problem running decoding encoding found good option encode decode string correctly find icons example string want search find number words emoticons follows smiley emoticon rocks like challenge make script counts number words emoticons string notice emoticons sitting next words space trying read unicode characters outside ascii range convert ascii range leave unicode work untested best solution work first need encode got unicode string engine handle unicode use include range characters specifying first last hyphen specify unicode characters know type u escape sequences string big enough building whole findall list seems wasteful counting words separately want use alternation group points python versions allowed narrow unicode builds example cpython windows builds narrow narrow builds characters range u u ffff way search characters ok exist search assume exist get invalid range error compiling regexp except course good chance wherever getting actual strings utf utf le characters exist encoded surrogate pairs want match surrogate pairs right need translate search surrogate pair search convert high low code points surrogate pair code units python terms search leave second condition last case worried accepting bogus utf obvious translates regexp example range u e u utf course range small enough low lead high lead gets simpler example original question range searched one last trick actually know whether going get utf le utf bom far away data searching surrogate lead trail code unit valid standalone character end pair search directions 
0    -------    pil open method working bytesio reason try make image bytesio steam identify image code stack trace error throws using pillow implementation pil     ------   bytesio object image trying use pillow program save bytestring camera file example small raw byte string camera represent greyscale image resolution x pixels using lsb bit however get following error line image open docs pil image rel nofollow noreferrer title pillow pillow implied way go tried apply solutions get working working sure resulting image look like example want unpack packed image pixel bits bit image could use code 
0    -------    faster python x math sqrt x wondering time title say faster actual function simply raising half power update matter premature optimization simply question underlying code actually works theory python code works sent guido van rossum email cause really wanted know differences methods email least ways square root python math sqrt operator pow x curious differences implementation comes efficiency better response pow equivalent math sqrt work complex numbers links c sqrt function one faster idea     ------   accurate x math sqrt x recently discovered x math sqrt x always produce result python checking integers two methods produced different results almost exactly samples size error increasing slowly larger numbers question method accurate pow function math sqrt function calculate results accurate default float type store think errors seeing result limitations floating point math rather inaccuracies functions also since difference problem taking square root digit number even accurate physics calculations seldom requires many significant digits another reason use math sqrt easier read understand generally good reason things certain way neither one accurate diverge actual answer equal parts math module wraps platform c library math functions names math pow useful need want high compatibility c extensions calling c pow builtin pow implementation python infix operator deals complex numbers unbounded integer powers modular exponentiation c pow handle complete math sqrt probably c implementation sqrt probably related pow 
0    -------    setting python locale work trying set python locale want want use weekday name local language using strftime currently weekday printed english even though tried setting locale several ways running rpi ubuntu mate tried solutions topic tried explicitly setting locale nl nl utf also tried setting empty string suggested last answer cases try see nl nl utf still get weekday english able find much except topic get fixed edit tried options first one returns weird result seems like nothing saved wrong assuming set locale system remember second option even though trying get dutch weekday name still get english name return besides method starts counting sunday monday anything wrong third suggestion got weekday name thanks still wondering first work using script device would like work correct global locale edit yes calling locale setlocale python affect future python processes configure environment variables instead see set locale settings ubuntu ok work assumed set locale future use python like environment variable python bash script creating files python script delete time learning code know python wrote bash script bash date method seems pick locale way go ahead see fix python see type locale     ------   correct way set python locale windows attempting sort list strings locale aware manner used babel library i n related tasks support sorting python locale module provides function requires locale process set one want work kind pain live problem seem actually set locale locale module gives example run get wrong ubuntu ubuntu may problem local installed system shell try check find locale interested otherwise install xxx language case xxx italian locale run dpkg reconfigure try python shell italian locale needed seems using windows locale strings different take precise look doc windows think would something like msdn list 
0    -------    tell whether generator started like function started behaves like following implement function looked gi running attribute appears used something else know first value needs sent generator something like however seems     ------   python function checks generator started try define generator function reset generator function send example everything works fine except use send new generator object started yet case gives typeerror function checks generator started catch typeerror create new generator object case avoid sending non none value started generator need call next send none first agree others david beazley python x need call next function instead next great option though particular decorator simple also successfully used library nice implementation many utilities beazley presentations including coroutine regarding whether one check generator started python use available python pure python rely anything new python check way specifically g started inspect g inspect gen created error implies send function must called none started generator could catch typeerror roll either way used reset generator remade great overview generator concepts syntax covering chaining generators advanced topics 
0    -------    combine twill python one code could run google app engine installed twill computer previously installed python using recently python installed disk c computer c python twill folder twill located e tmp twill code using twill code helps log one website account record html code page website access logging store file named result txt course using code firstly need replace login real login password real password website sign page url url page website real urls website number number form website used sign form website log page code store test twill file located twill folder e tmp twill test twill run file command prompt python twill sh test twill also installed google app engine sdk google app engine also using awhile example using code code helps transform phrase nobody inspects repetition md digest put two pieces code together one python script could run google app engine let say want code log website google app engine go another page website record html code twill code transform html code md digest second code combine two codes one python code guess done somehow importing twill done python code one run google app engine import twill somewhere internet perhaps twill already installed google app engine update update response answer list folders twill folder contain init py files folders list located inside folders also mentioned list e twill build lib twill extensions match parse e twill build lib twill extensions e twill build lib twill packages mechanize dist e twill build lib twill packages e twill build lib twill e twill twill extensions match parse e twill twill extensions e twill twill packages mechanize dist e twill twill packages e twill twill     ------   using twill python open link module object attribute popen downloaded installed computer os windows xp downloaded created first application python directory named helloworld contained small python file name helloworld py contents small file whenever ran application locally computer browser firefox always showed white window hello world written downloaded unpacked helloworld directory able execute small commands twill shell example could turn web page link wanted perform operation directly python e means using twill python twill python api using making extensions twill essentially thin shell around mechanize package twill commands implemented commands py file pyparsing work parsing input converting python commands see parse py interactive shell work readline support implemented via cmd module standard python library using twill python two fairly simple ways use twill python compatible need choose use whichever appropriate first simply import commands commands py use directly python example advantage simple well tied directly documented set commands commands reference decided use way deleted previous contents helloworld py gave new contents tried run file computer browser instead depicting contents web site gives error message module object attribute popen please take look whole page last three lines page module object attribute popen anybody please explain popen attribute wrong thank advance update update response second answer provided hello tried way work received error message see whole page idea means went wrong use anything google app engine twill uses stuff available google app engine work twill fully supported app engine notably code trying call external command tidy calling external commands app engine work think use mechanize directly twill communicates system way supported google app engine 
0    -------    multiprocessing manager dictionaries python using autovivification store data multiprocessing setting however figure incorporate multiprocessing manager function autovivification code comes works fine multiprocessing occurs code relative simpel insert ngram dictionary read written updated tried series thought good solutions get work except calling write file insert ngram really neat solution possibility get manager dict update since manager proxy mutations manager dict within subprocess stored kept track see also solved folows waiting machine finish tasks see performs seems like performance hit copy dicts like dicts run mb update application dict update hit even though dict mb whole big performance impact     ------   multiprocessing manager work python concern multiprocessing manager python example output till worked expected modified code like output confused list changed expected anybody help figure happened thanks advance note answer may accurate python update time investigate feel free edit manager proxy objects unable propagate changes made mutable objects inside container words manager list object changes managed list propagated processes list inside list changes inner list propagated manager way detecting change order propagate changes modify manager list object directly indicated note example consider following code output output see new value assigned directly managed container changes assigned mutable container within managed container change mutable container reassigned managed container changes ns instance objects special getattr setattr methods allow values shared across processes order take advantage mechanism changing value must trigger setattr causes ns getattr called retrieve ns x cause ns setattr called fix must use ns x 
negative samples:
29    -------    tkinter intvar returning py var instead value checkbutton intvar object associated try get value var receiving py var code getting py var     ------   sqlite operationalerror column py var writing code project using sqlite came across error seem fix looked answer always seems case sqlite reading variable column title column find one variables bit lost attempting insert data variables sqlite database first got simpler version working okay try integrate full code getting stuck trial version using get whole thing working try use properly know code great relatively new coding exactly perfect want get one part fixed used quite parts program variables grabbing used original ones tk stringvar sqlite kept coming back saying unsupported full error message sorry format code let post quote originally using instead kept saying variables unsupported friend using got working remember lost file try use help thanks advance help missed information let know syntax insert statement quite right question mark parameter substitution symbol sqlite python using ensure data inserted database securely see 
29    -------    python simplehttpserver change response header use python simplehttpserver tests applications test need change server response header field server server python would like something like server apache possible change field thx     ------   set header python simplehttpserver using simplehttpserver test webpages working works great however need cross domain requests requires setting access control allow origin header domains page allowed access easy way set header simplehttpserver serve original content header would request bit hack changes end headers behavior think slightly better copying pasting entire simplehttpserver py file approach overrides end headers subclass calls send headers followed calling superclass end headers lines either less though mostly boilerplate say simple way simple means add lines write additional header keep existing functionality best solution would subclass class implement functionality addition new header problem behind simple way observed looking implementation class python library notice send head method particularly lines end method send response headers notice invocation end headers method method writes headers output together blank line signals end headers start response body therefore would possible subclass handler invoke super class get method add another header sending headers already finished call super class get method returns work like get method send body file requested send body finalize sending headers think stuck sub classing class implementing exactly code library copy paste add another header call end headers method send head 
29    -------    python try except expression find sort pattern way condense single expression like else statements turn equivalent thing try catch     ------   python try except expression always get default value try apply http request use google api fellow try use try exception handle excption network errors try use exception always get failure reults http even get successful result simply run success function make sure successful result would get correct string reuslt http request get failure result pass function success argument currently passing result value get address sydney actual error raised trying call success translates sydney something like str object callable proper call would 
29    -------    python x validate date time format timezone want validate dates rfc defined formats problem timezone could differ eg expanded upon code works nicely long timezone utc local could change local timezone suppose would need extract last part string test feels messy rather go complete regex solution looking sure use problem though     ------   setting timezone python possible python set timezone like php really install modules etc using shared web hosting ideas get specific values listed see complete list directives keep mind strftime function always return string integer type answer get datetime components individually better use easy get parts 
28    -------    estimate autocorrelation using python would like perform autocorrelation signal shown time two consecutive points ms repetition rate hz equation estimating would like use taken section estimation simplest method finding estimated autocorrelation data python something similar numpy correlate use calculate mean variance edit help written     ------   avoid map object error autocorrelation script hello like use autocorrelation script found using numpy array calling code like terminal returns map object x sure number better write call function autocorrelation lags correctly please help assuming want list returned instead change line explanation code copied probably written python map function changed python return map object instead list thus wrap list call get list 
28    -------    httplib attributeerror module object attribute using script longer maintained downloads entire google drive local storage fix issues depreciation script seemed running smoothly however seemingly random times script break receive following error modules using code causing error assuming error something losing connection downloading httplib module full code found thankyou advance anyone shed light possible fix     ------   handle python trying fetch data website however returns incomplete read data trying get huge set nested links research online found might due server error chunked transfer encoding finishing reaching expected size also found workaround however sure use case following code working please help thanks find case send http request adding fix problem request back http connections support trick use http instead default http http could handle chunks reason webserver request http included question simply wrapper executes urllib read function catches incomplete read exceptions want implement entire patch could always throw try catch loop read links example 
27    -------    make angles matplotlib polar plot go clockwise top using matplotlib numpy make polar plot sample code notice clock plot angles go counterclockwise would useful data visualization purposes clock angles go clockwise way besides rotating data manually changing axis labels     ------   python clockwise polar plot make clockwise plot somebody ask similar question dont understand edit correctly using register projection add strings ax set theta direction ax set theta direction n slightly comprehensible 
27    -------    find index new item inserted sorted list keep sorted want know th position ordered list b pythonic way     ------   python sorted list mean structure log n complexity x push operations log n complexity find element n complexity compute list x sorted also related question performance list insert particular reason big requirements want fast module pure python fast fast c implementations like blist shows benchmarks faster par blist sorted list type note also provide sorted dict set types sorted list type performance requirement always remember benchmark module claim fast big notation suspect also shows benchmark comparisons disclaimer author python module installation usage standard python list sorted form standard heapq module used append log n remove smallest one log n sorted list definition various implementations balanced trees python meet requirements e g 
27    -------    embed python interpreter pyqt widget want able bring interactive python terminal python application variables program needs exposed interpreter currently use sub classed modified qplaintextedit route commands eval exec keep track separate namespace dict however got elegant robust way example want ipython pygtk currently many corner cases probably missed slow try large print loop got simpler less bug prone way hope def runcommand self function key understanding problem ideally want improve rather want replace content something simpler smarter functionality console myvar app myvar statement main also important     ------   embed python interpreter qt app straightforward way embed python interpreter qt application hoping cross platform solution possible purpose supports windows linux mac os 
27    -------    python tkinter treeview get return iid selected item meant get iid treeview item user clicks item print reason identify receiving event variable perhaps upon clicking item treeview error response comment edit made code based link produce error still print iid thank accepted answer summary seems needed use self tree bind self tree click event instead particular problem thanks providing second way things aswell     ------   returning tkinter treeview iid treeview inserted data shown adds entry end treeview text test column values data data iid set test would like return value iid item treeview use function storing file path iid tried using treeview item returned following dictionary without iid version author column headings question simple way return iid given row entry treeview get iid use rel nofollow noreferrer identify function iid argument stands item identifier unique item give value want 
