positive samples:
0    -------    get mean across multiple pandas dataframes generating number dataframes shape want compare one another want able get mean median across dataframes want get mean two dataframes easiest way clarify want get mean particular cell indexes columns dataframes exactly example gave average source would     ------   compute average mean across dataframes python pandas list dataframes dataframe originally numerical data taken shaped identically rows columns first column index index index want compute average mean values single dataframe want export dataframe excel simplified version existing code however open excel file see looks like every dataframe copied sheet average mean values shown simplified example shown cutting rows dataframes looking something like also already seen answer possible looking clean solution one would simply involve looping dataframe value value suggestions suppose need mean rows column concatenating list data frames index add columns data frames right first data frame try appending data frames group take mean get desired result write file writing alternatively instead appending using loop also mention axis along want concatenate data frames case want concatenate along index axis put data data frames top top write file writing perhaps misunderstood asked solution simple need concat along correct axis dummy data df pd dataframe index range rows columns range columns data j j range columns range rows df df pd dataframe index range rows columns range columns data j j range columns range rows ps job op pd concat puts dataframes next eachother want groupby first need stack groupby stack df concat stack groupby level mean unstack puts dataframes top eachother need groupby index like df concat groupby level mean use context manager plain overwrite filepath 
0    -------    want images load css render firefox selenium webdriver tests python using selenium python bindings fetch data partner site average taking around secs perform operation looking way disable images css flash etc using firefox also using prevent opening firefox window optimization speed firefox also helpful already tried network http options help much also set permissions default image     ------   turn images selenium firefox looking disable images firefox using selenium simple update preferences firefox documented instructions however run images display enter config value permissions default image still rather tried setting code written python reference code works perfect another change preference e g turning csv files line firefox profile set preference permissions default stylesheet difference tell csv setting image one line permissions default image already exists config e without setting however line permissions default stylesheet seems add new lines value want change existing one ridden selenium enter value understand problem related following firefox issues means rel nofollow noreferrer permissions default image frozen cannot changed nothing alternatives use extension switch chrome problem solution bellow steps creating new profile firefox windows completely close firefox press window r write firefox exe p press enter create new profile open firefox created profile open config navigation bar find permissions default image make number change code like bellow 
0    -------    create anonymous class instance python sometimes need create anonymous class instance python like c python way pythonic way single statement     ------   python anonymous classes wondering python anything like c anonymous classes feature clarify sample c snippet python would imagine something like specific requirement able create object specified fields expression context e g usable lambdas places statements allowed additional external declarations ability access individual components name via normal member access syntax foo bar created object also implement structural comparison component names position tuples particular tuples components named classes require declaration dicts undesired foo bar syntax access components still requires name even define type inline comparison position based name based particular know write thing python needed would like know anything like python standard library popular third party libraries edit sake single expression solution combines two informative answers ken yielding structural equality without extra outside declarations technically satisfies requirements question sincerely hope one ever uses definitely pythonic way would use dict meets requirements except still foo x instead foo x problem could easily define class nice short one note second one problems alex points comment see create anonymous object slightly ugly syntax using type built function rd parameter dict contain fields object another variation proposed peter norvig also similar answer posted ken benefit method implement equality contents dict first option 
0    -------    possible multiple complex regex substitutions substitution function single line python writing script python replace email address ip address random characters log file right one line read substitution email address done line read substitution ip address want one go cannot find way read post seems work simple substitutions case substituting relatively complex regex function figure way one line original code     ------   multiple substitutions using regex python use code create new file substitution aa using regular expressions wondering use line new text sub aa text read multiple times substitute string others letters want change order change one letter text aa b bb c cc write line letters want change easier way perhaps create dictionary translations put letters array sure call use capturing group backreference put characters want double case lower case b c replacement string refer whatever matched capturing group n notation n positive integer excluded refers first capturing group another notation g n non negative integer allowed g refer whole text matched expression want double characters except new line want double characters new line included answer proposed nhahtdh valid would argue less pythonic canonical example uses code less opaque regex manipulations takes advantage python built data structures anonymous function feature dictionary translations makes sense context fact python cookbook shown example copied activestate case could make dict trans aa b bb pass multiple replace along text want translated basically function creating one huge regex containing regexes translate one found passing lambda function regex sub perform translation dictionary lookup could use function reading file example actually used exact method production case needed translate months year czech english web scraping task nhahtdh pointed one downside approach prefix free dictionary keys prefixes dictionary keys cause method break 
0    -------    yield sub combinations limit working python function working follows version function output follows problem work larger tuples function sub combinations returns huge amount data takes long compute address want limit amount data returned adding extra argument example sub combinations return data without tuples marked star dropped offset consequtive values tuple greater example rows containing likes etc dropped line needs adjusted drop lines figured yet suggestions barry     ------   yield sub combinations constraint lenght output list question probably combination following two questions slightly different perspective adapted code first question requirement gives output problem takes much time larger sized lists efficient pythonic way implementing could incorporate argument max function tried lot ways hard time working recursive functions seems desired result described ways split list say non empty sublists done generating possible combinations split positions example output 
0    -------    importerror module named filedialog pyinstaller written program tried turn executable using pyinstaller pyinstaller appears finished without errors end application dist program however try run application console window flashes second traceback edit copied traceback may mistake type screenshot flashes imports code anyone know whats causing fix presume error importation edit program runs fine run interpreter spyder packaged using pyinstaller resulting application gives error     ------   pyinstaller module named try compile python project windows using pyinstaller project works fine issues however try compile result work though get warnings compilation many txt file build directory really understand warnings example module named numpy pi since numpy pi module number never tried import numpy pi import numpy matplotlib explicitly addition using pyqt thought error might related libraries however able compile simple script uses numpy succesfully successfully means created executable file actually showed desired output however also txt file created contains exactly warnings one guess fact compiling actual project give success least related warnings else could error output compilation info none negative statement specify additional hook directory hooks using default directory far could read compile output e g hook matplotlib executed could see hook numpy neither could small example script one worked used following imports files different ones anyone know issue could related since pyinstaller give errors warnings could figure problem related libraries something else considered update suggestion compiled program without w redirected stdout stderr file executing program got following adding import tkinter beginning main file got finally added import filedialog program actually works problem runtime dependencies matplotlib compiling fine running program threw errors terminal closed immediately realize redirecting stdout stderr file could see missed libraries tkinter filedialog adding two imports top main solved problem similar problem module named filedialog discovered version could use pyinstaller hidden import filedialog instead modifying main script 
0    -------    numpy bits image data type cvtcolor conversion hsv colorspace converting image rgb hsv representation using cv cvtcolor converting resulting image np float dtype np uint np uint rescaling casting resulting images using cv imshow look different integer versions thus wondering done conversion correctly actually caused information lost conversion trying understand going figure sample images rel nofollow noreferrer result conversion rel nofollow noreferrer data print     ------   numpy bits image data type cvtcolor conversion lab colorspace trying understand lab work opencv previously open post playing testing datatype conversion lab lab standard range pixel data lightness b confused data shown opencv could anyone help check conversion datatype scaling correct testing image rel nofollow noreferrer testing result conversion rel nofollow noreferrer sure one expected colour observe lab uint one float thought display colour something might wrong scaling printed data reference seem like scaling back uint wrong looking value edit discussion managed display images correctly bits bits got result rel nofollow noreferrer printed data conversion bits still printing l channel scaling weird distinct colours let simplify use image pixels eliminate tens thousands redundant pixels make behaviour difficult observe simplify whole thing returns well look second pixel point let consult kind colour conversion outputs l b values converted destination data type bit images l l b b bit images currently supported bit images l b left got bit image values left e ranges l b hence multiplying result casting bit unsigned integer leave nonsense due overflow scale convert back float bits lab colorspace without experiencing overflow apply elementary math hinted quoted documentation l l b b result comparison 
0    -------    read tab separated file first column key rest values tab separated file billion lines imagine columns instead want create dictionary string first column key rest values like computationally expensive else get desired dictionary actually numpy array would appropriate list floats value     ------   find number columns tab separated file tab separated file billion lines imagine columns instead number columns unknown find number columns tab separated file tried edchum else get number columns efficient way imagine suddenly receive file unknown number columns like million columns str count method timings file columns count seems fastest one using str translate actually seems fastest although need add pandas solution gives error using readline adds overhead different results using python 
0    -------    combining rows pandas dataframe iterating achieve expected result following dataframe expected result rows rows merging empty strings col col also concatenating values col one cell anyone help user defined function     ------   combining rows pandas dataframe comparing multiple columns achieve expected result following dataframe expected result rows rows merging empty strings col col also concatenating distinct values col col one cell anyone help user defined function previous let try one output 
0    -------    using cookies txt file python requests trying access authenticated site using cookies txt file generated chrome extension python requests throw error exception yields login screen incorrectly however know cookie file valid successfully retrieve content using wget idea wrong edit tracing really load verify cookies correctly parsed e correct values domain path secure etc tokens transaction still resulting login form seems wget must something additional exact cookies txt file works     ------   using chrome cookies python requests trying log website using cookies got chrome session grabbed cookie table data using command select cookie host key like steam column names pragma table info cookie sorted data list comprehension know pass requests cookies become usable request say need pass dict ie cookies cookies working keys names overwrite since names steam language though different hosts edit found might help know format chrome cookies question pass several different sites worth cookies requests keep mind trying something http specification intentionally tries prevent e sending cookies domains come might doomed start make matters worse took cursory look way implements login work cut back question assuming session cookies valid might based encryption key sharing captcha methods login page performs might able login requests library simply supplying valid cookie dict docs state also know data stored databases getting cookies keep mind might storing metadata comes along set cookie header expiry path domain etc information user agent chrome ie requests library etc uses determine cookies send request included request cookie header name value pairs need supply cookie dict two cookies name pick one end likely one evaluated else server simply return error created example usage requests 
negative samples:
29    -------    creating cartesian product set vectors python given standard basis vectors e e e dimensions letting elements e e e restricted say simple pythonic way create cartesian product vectors vector space example given would like get list linear combinations restricted naturals vectors could program going trouble thought would ask simple pythonic way maybe numpy something similar     ------   get cartesian product series lists get cartesian product every possible combination values group lists input desired output python documentation 
29    -------    eventlet threads run parallel wrote following code unfortunately see fetch listing involved sequentially would always print would expect see     ------   celery eventlet non blocking requests using python requests celery workers make large number sec api calls includes get post put delete request takes around s complete tried running celery workers eventlet pool concurrency since requests blocking process concurrent connection waiting one request make requests asynchronous lots projects combine requests one python asynchronicity frameworks two excellent examples eventlet specifically use use eventlet monkey patching make pure python library non blocking patch single library import requests instead import eventlet requests eventlet import patched requests packages could stripped two lines patch everything import eventlet eventlet monkey patch must execute early possible import requests amqp memcache paramiko redis everything non blocking update known issue monkey patching requests library get importerror cannot import name utils modify import line requests eventlet import patched requests init 
29    -------    matplotlib prints old title trying use print title want replace title currently using figure matplotlib figure canvas relevant title python string currently works except fact run code later prints new text top old resulting unreadable title replace old figure instead printing thanks tyler     ------   flush away default boxplot subplots made pandas package python following example try make boxplots emission vs voltage four power levels power level occupying subplot problem command flush away default grouped voltage missing bug thanks also without manually creating figure first generated calls super titles children fig object yes called times one subplot fix 
29    -------    python ttk treeview sort numbers trying use ttk treeview sort function illustrated answer question works fine strings like abc bcd cde etc try sort numbers ends showing like like data sorted output know values treeview columns strings likely going need convert integers sorting figure     ------   tk treeview column sort way sort entries clicking column surprisingly could find documentation tutorial work python since variable passed reference lambdas ended refering last element columns trick tcl pointed treeview tk demo program sort functionality python equivalent 
29    -------    python relative imports within package path import file parent directory within python package path file child dir totally clear vocabulary python packaging way example dir dir py dir dir dir py given dir python path looking best way import dir dir tried import dir dir import dir neither works correct way executing intent seems contain answer however quite sure make actually solve problem using init py files empty v attempting without using path hacks google keeps turning     ------   relative imports python hey pulling hair relative imports python read documentation times numerous posts forums still seem work directory structure currently looks like want expander py language id py access functions module run python main py accesses modules fine components expander import components language id import however code inside expander language id access functions module receive error gone bunch times seems follow documentation anyone ideas going wrong nevermind solved main py refers subpackages expander py language id py access functions py interesting thing text file inside components directory expander py uses however runtime locate file even though directory moved text file directory main py worked seems counter intuitive 
28    -------    relative imports python hey pulling hair relative imports python read documentation times numerous posts forums still seem work directory structure currently looks like want expander py language id py access functions module run python main py accesses modules fine components expander import components language id import however code inside expander language id access functions module receive error gone bunch times seems follow documentation anyone ideas going wrong     ------   python packages relative imports working python application consisting core multiple independent modules using core difficulty setting relative imports packages init py files empty running python running python main py results valueerror attempted relative import non package similar questions thanks help short use relative imports packages imported example could use relative import app module main py although would need core import foo core one level main py 
28    -------    get diagonals matrix list lists python looking pythonic way get diagonals square matrix represented list lists suppose following matrix large diagonals easy trouble coming way generate diagonals output looking     ------   concatenate strings along diagonals setup question concatenate strings along diagonals expected result tried works fine zero answer far faster could may also arr diagonal sum join explicit 
28    -------    pip install bs giving error trying install beautifulsoup using command pip install beautifulsoup per bs documentation using mac os x python run command terminal get error anyone suggest wrong thanks advance edit light comments tried run sudo pip install pyopenssl however get error     ------   attributeerror object attribute set host name python ubuntu server trying get requests library make https requests like first got following usr local lib python dist packages requests packages urllib util ssl py true sslcontext object available prevents urllib configuring ssl appropriately may cause certain ssl connections fail information see following advice question upgraded warning following error attributeerror object attribute set host name fix fix following able get python working ubuntu lts 
27    -------    ioerror errno file directory im problems trying run iteration many files folder files exist print file files see names im quite new programming could please give hand kind regards     ------   create text file ioerror errno file directory writing scraper open csv get list links extract specific html tag site save content txt file named day speech given accomplished able extract date speech final step working trying save speech txt file idle shows message ioerror errno file directory h txt tried using w creating file failed wrong problem expects find directory subdirectory used denote directories suggest replacing characters 
27    -------    finding intersection two lists strings python gone however could solve problem finding intersection two string lists using python two variables find n part b tried using intersect b mentioned try convert set throws error convert set used method list converted using tuple tuple converted set however returns null set intersection help find intersection     ------   getting intersection two lists python two lists genes analyzing essentially want sort elements lists much way venn diagram e elements occur list placed one list list another occurring third code far program currently gives two identical lists list list mutually exclusive intersection file produced different though feel trusted since two lists behaving expected informed since posting question operation easily done via python sets module however educational purposes still quite like fix program bug construction lists section last line might also want checkout handy website 
